enum Category {
  ELECTRONICS
  FURNITURE
  HOME_APPLIANCES
  SPORTING_GOODS
  OUTDOOR
  TOYS
}

enum UserType {
  USER,
  ADMIN
}

enum PeriodUnit {
  HOUR,
  DAY,
  WEEK,
  MONTH
}

type User {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  address: String!
  phoneNumber: String!
  userType: UserType!
  password: String!
}

type Product {
  id: ID!
  owner: User!
  title: String!
  description: String
  categories: [Category!]!
  price: Float!
  rentPrice: Float!
  rentUnit: PeriodUnit!
}

enum OrderType {
  BUY
  RENT
}

type Order {
  id: ID!
  product: Product!
  buyer: User!
  type: OrderType!
  rentStart: String
  rentEnd: String
}

type Query {
  me: User
  products: [Product!]
  userProducts: [Product!]
  buyerOrders: [Order!]
  buyerBoughtOrders: [Order!]
  buyerRentedOrders: [Order!]
  ownerSoldOrders: [Order!]
  ownerSoldBoughtOrders: [Order!]
  ownerSoldRentedOrders: [Order!]
}

input UserDto {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String!
  phoneNumber: String!
  userType: UserType!
}

input LoginInput {
  email: String!,
  password: String!
}

input ProductInput {
  id: ID
  title: String!
  description: String
  categories: [Category!]!
  price: Float!
  rentPrice: Float!
  rentUnit: PeriodUnit!
}

type Mutation {
  register(input: UserDto!): User
  login(input: LoginInput!): String!
  createProduct(input: ProductInput!): Product!
  updateProduct(input: ProductInput!): Product!
  deleteProduct(productId: ID!): Boolean!
  buyProduct(id: ID!): Order!
  rentProduct(id: ID!, from: String!, to: String!): Order!
}
